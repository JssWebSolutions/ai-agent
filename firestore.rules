rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }

    // Agents collection
    match /agents/{agentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
    }

    // Usage collection
    match /usage/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow create, update: if isAuthenticated() && (
        isOwner(userId) || isAdmin()
      );
      allow delete: if isAdmin();
    }

    // Template usage
    match /usage/template {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // User counts
    match /userCounts/total {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Settings collection (general)
    match /settings/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }

    // Specific settings for API keys and payment settings
    match /settings/api-keys {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /settings/payment-settings {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // API Settings collection
    match /apiSettings/{provider} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
  }
}
